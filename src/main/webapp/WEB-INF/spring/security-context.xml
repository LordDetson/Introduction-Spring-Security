<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/security"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd"
            xmlns:bean="http://www.springframework.org/schema/beans">

    <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/user" access="isAuthenticated()"/>
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <form-login
                login-processing-url="/login_check"
                login-page="/login"
                default-target-url="/user"
                always-use-default-target="true"
                authentication-failure-url="/login?error=true"
                username-parameter="user_login"
                password-parameter="password_login"/>
        <logout logout-url="/logout"
                logout-success-url="/login"
                invalidate-session="true"
                delete-cookies="JSESSIONID"/>

        <access-denied-handler error-page="/accessDenied"/>

        <remember-me key="myAppKey" remember-me-parameter="remember-me" data-source-ref="dataSource"/>
    </http>

    <!--<bean:bean id="jdbcGroupImplForMySQL8" class="org.springframework.security.provisioning.JdbcUserDetailsManager">
        <bean:property name="dataSource" ref="dataSource"/>
        <bean:property name="enableAuthorities" value="false"/>
        <bean:property name="enableGroups" value="true"/>
        <bean:property name="findAllGroupsSql" value="select group_name from `groups`"/>
        <bean:property name="insertGroupSql" value="insert into `groups` (group_name) values (?)"/>
        <bean:property name="findGroupIdSql" value="select id from `groups` where group_name = ?"/>
        <bean:property name="deleteGroupSql" value="delete from `groups` where id = ?"/>
        <bean:property name="renameGroupSql" value="update `groups` set group_name = ? where group_name = ?"/>
        <bean:property name="findUsersInGroupSql"
                       value="select username from group_members gm, `groups` g where gm.group_id = g.id and g.group_name = ?"/>
        <bean:property name="groupAuthoritiesByUsernameQuery"
                       value="select g.id, g.group_name, ga.authority from `groups` g, group_authorities ga where g.group_name = ? and g.id = ga.group_id"/>
    </bean:bean>-->

    <authentication-manager>
        <!--<authentication-provider user-service-ref="jdbcGroupImplForMySQL8">-->
        <authentication-provider>
            <!--<user-service>
                <user name="admin" password="{noop}admin" authorities="ROLE_ADMIN, ROLE_USER"/>
                <user name="user" password="{noop}pass" authorities="ROLE_USER"/>
            </user-service>-->
            <jdbc-user-service data-source-ref="dataSource"/>
        </authentication-provider>
    </authentication-manager>

    <bean:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
               factory-method="getInstance"/>
</bean:beans>